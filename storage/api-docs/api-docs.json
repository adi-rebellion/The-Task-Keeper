{
    "openapi": "3.0.0",
    "info": {
        "title": "Task Keeper API Documentation",
        "contact": {
            "email": "adityanaidu.work@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "description": "Allows a user to log in to TaskKeeper using their email address and password.",
                "operationId": "login",
                "requestBody": {
                    "description": "Credentials required to log in",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "description": "Authentication token",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid email or password"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Logout",
                "description": "Logs out the authenticated user and invalidates their session token.",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string",
                                            "example": "User logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Invalid or missing authentication token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Registration",
                "description": "Register a new user to TaskKeeper with their name, email address, and password.",
                "operationId": "register",
                "requestBody": {
                    "description": "User registration data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "User's full name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "description": "Password for the user account",
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "description": "Confirmation of the password",
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "user": {
                                            "description": "Registered user details",
                                            "properties": {
                                                "id": {
                                                    "description": "User ID",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "description": "User's full name",
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "description": "User's email address",
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get list of tasks",
                "description": "Returns list of tasks with filters applied",
                "operationId": "getTasks",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "New",
                                "Incomplete",
                                "Complete"
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter by start date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "due_date",
                        "in": "query",
                        "description": "Filter by due date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "description": "Filter by priority",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "High",
                                "Low",
                                "Medium"
                            ]
                        }
                    },
                    {
                        "name": "note_content",
                        "in": "query",
                        "description": "Filter by note content",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "note_created_at",
                        "in": "query",
                        "description": "Filter by note creation date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of tasks per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Order of the results",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "Order by field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a task with multiple notes and attachments",
                "description": "Creates a task with multiple notes, each having multiple attachments.",
                "operationId": "createTaskWithNotesAndAttachments",
                "requestBody": {
                    "description": "Task data with notes and attachments",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "subject": {
                                        "description": "Subject of the task",
                                        "type": "string"
                                    },
                                    "start_date": {
                                        "description": "Start date of the task (YYYY-MM-DD)",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "due_date": {
                                        "description": "Due date of the task (YYYY-MM-DD)",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "status": {
                                        "description": "Status of the task",
                                        "type": "string"
                                    },
                                    "priority": {
                                        "description": "Priority of the task",
                                        "type": "string"
                                    },
                                    "notes": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Note"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task created successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Note": {
                "properties": {
                    "subject": {
                        "description": "Subject of the note",
                        "type": "string"
                    },
                    "note": {
                        "description": "Content of the note",
                        "type": "string"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "description": "Attachment file",
                            "type": "string",
                            "format": "binary"
                        }
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearer": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Tasks",
            "description": "Tasks"
        }
    ]
}